* use-package-secret

** Description

This extension allows configuration of symbols from external files so
emacs init files may be made public but usernames, passwords, access
tokens, and other sensitive information may be used for configuration
but kept private.

** Usage

Configure variables via external files in use-package. Provides support
for the :secret keyword. It supports the following arguments:

*** In the init file:

1. The basic form

   :secret variable ...

   The variable should be unquoted.

2. :File keyword

   :secret [ ( :file . absolute-filename ) ] [ variable ] ...

   By default, secrets are stored in
   {$user-emacs-dir}/{$package-name}/secret.Eli

   In order to change the default, add a consp whose car is the
   keyword :file and whose cdr is an absolute path to the file.

3. :Must and :may keywords

   :secret [ :must ] [ variable ] ...

   :secret [ :may ] [ variable ] ...

   ':Must' and ’:may’ are on and off switches which control the same
   internal processing state. When the state is ':must', an error will
   be signaled by use-package if the variable cannot be set.
   ':May'-decorated forms will fail silently if the file is not
   present. The default state is ':may'.

   There is also a customizable boolean
   'use-package-load-seq-mustify-mays' which will force all forms to
   act as though they are ':must'-decorated.

4. :Verbose keyword

   :secret :verbose [ variable ]

   The :verbose decorator enables extra logging.

   There is also a customizable boolean
   ’use-package-secret-verbose’ which enables extra logging globally.

5. Lists

   Organizing the parameters into lists provides a scope for all the
   keyword decorators. A new context resets the decorated states to their
   post-customization states.

   :secret (:must tom dick :verbose harry ) :verbose diane

   In this example, ':must' applies to tom, dick and harry. Harry will
   have ':verbose' logging. diane will be processed with ':may' and
   ':verbose'.

*** In the secret file:

A secret file is a plist. The keys are variable names and the values
are the settings. Values are NOT evaluated when loaded. 

Sample:

#+BEGIN_SRC emacs-lisp
(
 variable-1 '("sample" "list" 1)
 variable-2 "sample-string-literal"
 variable-3 1024
)
#+END_SRC

Files are loaded once, on first use. Once a given file has been
loaded, it will not be loaded again, even in the context of a
nested list.

** Installation

This package is available from [[https://melpa.org/#/][MELPA]] and extends [[https://github.com/jwiegley/use-package][use-package]]. There is
documentation at those links which explains how to set your emacs up
to use this package.

Once those work, you can install ’use-package-secret’ and its dependencies
using:

#+BEGIN_EXAMPLE
  M-x package-install RET use-package-secret RET
#+END_EXAMPLE

** Installing from the Git Repository

Use Git to clone the use-package-secret repository:

#+BEGIN_SRC shell-script
  $ git clone https://github.com/emacswatcher/use-package-secret.git /your/desired/source/path
  $ cd /your/desired/source/path/use-package-secret
#+END_SRC

